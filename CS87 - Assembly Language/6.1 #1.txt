.586
.MODEL FLAT

.STACK  4096            ; reserve 4096-byte stack

.DATA                   ; reserve storage for data

num DWORD 13

.CODE                           ; start of main program code
main    PROC

	push num	;pushes the number to be tested onto the stack

	call OddTest	
	add esp, 4		;resters the stack pointer

	ret

main    ENDP

;this procedure test to see if a number is odd, returns
;0 in eax if even and -1 in eax if odd

OddTest PROC

push ebp
mov ebp, esp		;saves and moves the base pointer

push ebx			;saves register to be used

mov eax, 0	;prepares eax to hold value return

mov ebx, [ebp+8]	;moves the number we pushed onto the stack into eax

test ebx, 1			;" pretend and's " the number with 1 if, the result is 1
jz EvnNum			;it means the numebr is odd and returns -1
					;else if the result of the test is 0 it returns 0

mov eax, -1

pop ebx
pop ebp				;restores used register and base pointer
ret


EvnNum: 
mov eax, 0

pop ebx
pop ebp				;restores used register and base pointer
ret

OddTest ENDP



END                             ; end of source code
